{"version":3,"sources":["Assets/images/Madhan-pro.jpg","Component/About/About.jsx","Component/Education/Education.jsx","Component/Social/Social.jsx","Component/NameCard/NameCard.jsx","Component/Technical/Technical.jsx","Component/Home/Home.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","About","className","class","aria-hidden","Component","Education","Social","NameCard","src","require","Technical","Home","props","state","isCardOpen","this","setState","onClick","openCard","App","React","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yKAAAA,EAAOC,QAAU,IAA0B,wC,oLCc5BC,E,uKAVP,OACI,yBAAKC,UAAU,cACX,uBAAGA,UAAU,aACT,uBAAGC,MAAM,oBAAoBC,cAAY,e,GALzCC,aCYLC,E,uKAVP,OACI,yBAAKJ,UAAU,kBACX,uBAAGA,UAAU,aACT,uBAAGC,MAAM,uBAAuBC,cAAY,e,GALxCC,aCYTE,E,uKAVP,OACI,yBAAKL,UAAU,eACX,uBAAGA,UAAU,aACT,uBAAGC,MAAM,cAAcC,cAAY,e,GALlCC,aCkBNG,E,uKAhBP,OACI,yBAAKN,UAAU,aACX,yBAAKA,UAAU,iBACX,yBAAKO,IAAKC,EAAQ,OAEtB,yBAAKR,UAAU,kBAAf,iBAEI,6D,GATGG,aCYRM,E,uKAVP,OACI,yBAAKT,UAAU,kBACX,uBAAGA,UAAU,aACT,uBAAGC,MAAM,aAAaC,cAAY,e,GAL9BC,aC8CTO,E,kDArCX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,YAAY,GAHD,E,qDAOVA,GACLC,KAAKC,SAAS,CAAEF,iB,+BAGV,IAAD,OACGA,EAAeC,KAAKF,MAApBC,WACR,OACI,yBAAKb,UAAU,QACX,yBAAKA,UAAU,aACX,yBAAKA,UAAWa,EAAa,SAAW,SAAUG,QAAS,kBAAM,EAAKC,UAAS,KAC3E,yBAAKjB,UAAU,YACX,yBAAKA,UAAU,iBAAf,mBAEJ,yBAAKA,UAAU,kBAInB,yBAAKA,UAAWa,EAAa,YAAc,QACvC,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,a,GA/BLV,aCkBJe,E,kDAnBb,WAAYP,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,GAFI,E,kGAQjB,OACE,kBAAC,IAAD,KACE,yBAAKZ,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,IAAD,Y,GAbQmB,IAAMhB,WCKJiB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,kBCRNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDuH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.5910a41c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Madhan-pro.a5c4ca7d.jpg\";","import React, { Component } from 'react';\n\nclass About extends Component {\n    render() {\n        return (\n            <div className=\"about-card\">\n                <p className=\"text-head\">\n                    <i class=\"fa fa-info-circle\" aria-hidden=\"true\"></i>\n                </p>\n            </div>\n        );\n    }\n}\n\nexport default About;","import React, { Component } from 'react';\n\nclass Education extends Component {\n    render() {\n        return (\n            <div className=\"education-card\">\n                <p className=\"text-head\">\n                    <i class=\"fa fa-graduation-cap\" aria-hidden=\"true\"></i>\n                </p>\n            </div>\n        );\n    }\n}\n\nexport default Education;","import React, { Component } from 'react';\n\nclass Social extends Component {\n    render() {\n        return (\n            <div className=\"social-card\">\n                <p className=\"text-head\">\n                    <i class=\"fa fa-users\" aria-hidden=\"true\"></i>\n                </p>\n            </div>\n        );\n    }\n}\n\nexport default Social;","import React, { Component } from 'react';\n\nclass NameCard extends Component {\n    render() {\n        return (\n            <div className=\"name-card\">\n                <div className=\"name-card-img\">\n                    <img src={require(\"../../Assets/images/Madhan-pro.jpg\")}/>\n                </div>\n                <div className=\"name-card-text\">\n                    Madhan Kumar S\n                    <p>\n                        Full Stack Web Developer\n                    </p>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default NameCard;","import React, { Component } from 'react';\n\nclass Technical extends Component {\n    render() {\n        return (\n            <div className=\"technical-card\">\n                <p className=\"text-head\">\n                    <i class=\"fa fa-code\" aria-hidden=\"true\"></i>\n                </p>\n            </div>\n        );\n    }\n}\n\nexport default Technical;","import React, { Component } from 'react';\n\n// inner Components\nimport About from \"../About/About\"\nimport Education from \"../Education/Education\"\nimport Social from \"../Social/Social\"\nimport NameCard from \"../NameCard/NameCard\"\nimport Technical from '../Technical/Technical';\n\nclass Home extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isCardOpen: false\n        }\n    }\n\n    openCard(isCardOpen) {\n        this.setState({ isCardOpen })\n    }\n\n    render() {\n        const { isCardOpen } = this.state;\n        return (\n            <div className=\"main\">\n                <div className=\"main-card\">\n                    <div className={isCardOpen ? \" hide \" : \" card \"} onClick={() => this.openCard(true)}>\n                        <div className=\"img-card\">\n                            <div className=\"img-name-card\">Madhan Kumar S</div>\n                        </div>\n                        <div className=\"name-details\">\n\n                        </div>\n                    </div>\n                    <div className={isCardOpen ? \"show-card\" : \"hide\"}>\n                        <NameCard />\n                        <About />\n                        <Education />\n                        <Technical />\n                        <Social />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Home;","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\n\n// Components\nimport Home from './Component/Home/Home';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() { }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"app\">\n          <Home/>\n          <ToastContainer />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport \"./Assets/css/Home.css\";\nimport \"./Assets/css/style.css\"\nimport \"./App.css\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}